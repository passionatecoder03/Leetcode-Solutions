class Solution {
    vector<vector<int> > ans;
    vector<int>  x;
    void dfs(TreeNode* tp)
    {

                x.push_back(tp->val);
                //cout<<tp->val<<endl;
                if(tp->left!=NULL)
                    dfs(tp->left);
                if(tp->right!=NULL)
                    dfs(tp->right);
            if(tp->right==NULL&&tp->left==NULL)
            {
                ans.push_back(x);
            }
            x.pop_back();
     }

public:
    int sumRootToLeaf(TreeNode* root) {
        dfs(root);
        int sum=0;
        for(int i=0;i<ans.size();i++)
        {
            int tmp=0;
            for(int j=0;j<ans[i].size();j++)
            {
                tmp = tmp + ans[i][j]*pow(2,ans[i].size() - j - 1);
            }
            
            sum=sum+tmp;
        }
        return sum;
    }
};
