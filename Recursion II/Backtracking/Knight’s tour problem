#include <bits/stdc++.h>
#define ll long long
#define T ll t; cin>>t; while(t--)
using namespace std;
#define speed ios_base::sync_with_stdio(0)
#define endl "\n"

int printsol(vector<vector<int>> &sol,int n)
{
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
		{
			cout<<sol[i][j]<<" ";
		}
		cout<<endl;
	}
		
}
int issafe(int nx,int ny,vector<vector<int>> &sol,int n)
{
	return (nx>=0&&nx<n&&ny>=0&&ny<n&&sol[nx][ny]==-1);
}

int point(int n,int x,int y,int val,vector<vector<int>> &sol,int xmove[],int ymove[])
{
	int i,nx,ny; 
	if(val==n*n) return 1;
	
	for(i=0;i<n;i++)
	{
		nx = x + xmove[i];
		ny = y + ymove[i];
		if(issafe(nx,ny,sol,n))
		{
			sol[nx][ny] = val;
			if(point(n,nx,ny,val+1,sol,xmove,ymove)==1)
			{
				return 1;
			}
			else
			{
				sol[nx][ny]=-1;
			}
		}
	}
	return 0;
}

int solve(int n)
{
	vector<vector<int>> sol;
	for(int i=0;i<n;i++)
	{
		vector<int> x;
		for(int j=0;j<n;j++)
		{
			x.push_back(-1);
		}
		sol.push_back(x);
	}
		
			
	int xmove[8]={2,1,-1,-2,-2,-1,1, 2};
	int ymove[8]={1,2,2, 1, -1,-2,-2,-1};
	
	sol[0][0]=0;
	
	if(point(n,0,0,1,sol,xmove,ymove)==0)
	{
		cout<<"no sol"<<endl;
	}
	else
		printsol(sol,n);	
}

int main()
{
	T
	{
		int n;
		cin>>n;
		solve(n);
	}		
	return 0;
}
